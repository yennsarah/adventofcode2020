val testInput = arrayOf(
    "..##.......",
    "#...#...#..",
    ".#....#..#.",
    "..#.#...#.#",
    ".#...##..#.",
    "..#.##.....",
    ".#.#.#....#",
    ".#........#",
    "#.##...#...",
    "#...##....#",
    ".#..#...#.#",
)

val puzzleInput = arrayOf(
    ".#.......#...........#.........",
    "..##.......#.#.#.....##...#....",
    ".......#..#.....#...#..........",
    "...#..........###...#........##",
    "#.#..#.#.##.#........#.#.....#.",
    "#..#....#..#....#..............",
    "#..#........#..................",
    "..#.#...#.#...#....#.#.#..#....",
    "..............#..#.............",
    ".##....#...................#...",
    "........#..........#......#...#",
    ".##..#..#...##..........#...#..",
    ".#...#....#.........#...#.....#",
    ".#........##............#.#....",
    "...........#..............##...",
    ".#..#......#..#..............#.",
    "..#.#.#...........#........#...",
    "..###..........#....#.#......#.",
    ".......#...##..........#.......",
    "........#...#..................",
    "....#....#..#.......#........#.",
    ".......##.#......#.....#...##..",
    "..#.#........................#.",
    ".#.....#.##..............#.#...",
    "..#.#...#.#..#....#....#.......",
    ".#....##.....#....#........#...",
    "..#...........#.##....#...#....",
    "..#.##...#....#.#.....##...#...",
    ".......#...####...#...#.......#",
    ".#...#.........................",
    ".......................#.......",
    ".....#.#.........#..........#.#",
    "#.........#............###..#..",
    ".....#.#.............###.......",
    "...#..#........#.#.......#.....",
    "...................#....#......",
    "...#..#...#............#..##...",
    "...#.....#....#.......##......#",
    ".....#....#...##..#..#...#...#.",
    "..........#...........#.#.#....",
    "..#.......#...#.....#......#...",
    ".........#.......##......#..#.#",
    "..#.....#..#.###...#.#......#..",
    "#....#...#..#...#.....#........",
    "..#......#..#.......#.#.....#..",
    "#......#...#......#.....##.#...",
    "........##.......#.......#.....",
    ".#.#...............#...........",
    "..............#...#.#....#.....",
    "....#......#.#..#......#.......",
    "...##....#....#...#............",
    ".#...............#...........#.",
    ".#.#...#.#.....#.....#...#.#...",
    "...##...........#.....#..#...#.",
    ".#.#...##.#.#......#......#....",
    ".##.....#.......##....#.#.#....",
    ".......#...........#....#....#.",
    "....#...........#......#.####..",
    "......#....#...#...##.......#..",
    "......................#.#####..",
    "..#...#.#...#..#..#......#.....",
    "....#........##.......##....#..",
    "#.#......##.........##.#..#...#",
    ".#.#....#...#..#...#...##....#.",
    ".....##...#....#....#.#........",
    "......#..#....#.#...#..........",
    ".........#...................#.",
    "............#.###....#.#.......",
    "...#.#.....#......#....#.#..#..",
    "..............#..#.#.#.#.......",
    "#..##...................##.....",
    "..#.......#..#.........##..#...",
    ".........##...#......#........#",
    "..#.........#........##.###.#..",
    "...........#.#....#.....###....",
    "..#....##.#..#.##....#.....##..",
    "..#.....#.##..................#",
    "#....#.........................",
    "..............#..#...#.#.......",
    "......#..#.#.##....#..........#",
    "..#.........#.####.....#.......",
    "......#..#.#..........#...#....",
    "......#.................#..#.#.",
    ".....#..........#..............",
    "....#.....#............#....##.",
    ".....#.....#........#..........",
    "............#.....#...#........",
    "........#....#.#...............",
    "#.....#.........#......#..#.#..",
    "...#..#......#......#.......#..",
    ".....#......#.#....#..#...#...#",
    "......................#..##....",
    ".............#.........###....#",
    "#..............#.#..........##.",
    "...#.#.................##......",
    "...........#.#.....#...........",
    ".........#.................#.#.",
    "........#........#...#..##...#.",
    "........#......##.......###....",
    "..............#.#.#............",
    ".#.....###...##.#......#.....#.",
    ".............#......#.#.#...#.#",
    "..#.........#.......#.....#....",
    "......#........#...##......#...",
    ".##..........##......#.#.....#.",
    "..#.##....#....#...............",
    "......#...#..#.....#.....#...#.",
    ".......##..##..#............##.",
    "..............#...##........#..",
    "#....#................#..#.....",
    "........#.......#.#.#...#......",
    "......#.......#..............#.",
    "#.#..#...#........#....#..####.",
    "..#........#...........#.....#.",
    ".##...........................#",
    ".............#...........#.....",
    ".#.....#.#...#.........#.......",
    "..........#...#....#....#......",
    ".#..#........##....#...........",
    ".......###......##...#.........",
    "..........#.#.#..#.#....#......",
    "........##..#.........#....#...",
    "........#.#......#.#...#.#..#..",
    "....#....................#.##..",
    "##....#..#...........#.....#.#.",
    "...#..............##...##..#.#.",
    "......#.##.#.......#..#...#....",
    "....#..#..##.....#.....#.#....#",
    ".......#....##.##..............",
    "#..##....#.....#.#.............",
    "..................#......#..#..",
    "..#......#...#..#.......#...#..",
    "...........#....#.#.....#......",
    "#..#...##.........###..#......#",
    ".......#......................#",
    "#.......#....................#.",
    "..#..#..........#..#..#....#...",
    ".##..#..#.....#.#..##..........",
    "#..###.......#..##..#...#..#.#.",
    ".....##......###.....#.#.##...#",
    "..............#...#....#.#.....",
    "#...........#..................",
    "..............#....#..##..#..#.",
    ".........#.............#.......",
    ".#.#....#....#...............##",
    ".##.##.#.....###.....#.........",
    "....#..............##......#...",
    "....#........##................",
    "....#.....#....#....##....##...",
    ".#........#......#......#......",
    "....#..........#...............",
    "##..........#......#.....#.....",
    "........#.#..#.#..#.....##.....",
    "..##......#.#.......#.#..#.....",
    ".#.......#......#...........#..",
    "..#.#..#.#..................#..",
    "...#...#...#...##......#.......",
    ".#...##....#...#...#...#.......",
    ".......#.#.......#.............",
    ".#.##.#.....#...........#.##.#.",
    ".#.##.#........#...##..........",
    ".#.....#.....#....#..#.........",
    "...##.............##...........",
    ".#........##.....#.......#...#.",
    "...........#..#..##........##..",
    ".....#..#......................",
    "..#.......#....................",
    ".....#......#....#....#.......#",
    "........#..#.#.....#......#....",
    "..........#..#.....#......#....",
    "..........#####.....#........#.",
    "........#..#...#.#....#......#.",
    ".........#...#....#.#..........",
    "......#....##..........#...#...",
    "#..............###.#.#.........",
    ".#.#............##......#.#..#.",
    "......#........................",
    "...#..#......#.......#....#...#",
    ".......#....##.....#.#......##.",
    "...........#..........#..#.....",
    "...........#..#.....###......#.",
    ".......#....#..##......#.......",
    ".........#.#.#.......#..#...#..",
    ".......#.......##.....##...#...",
    "..............#....#.....#.....",
    "...#....#.....#.#..........##..",
    "###.........#.............#....",
    "...##......#.#........#....#..#",
    "#....###.......#...#.#......##.",
    "....#...##.......#......#.....#",
    ".....#......#..................",
    "#........##....#....#.#........",
    "........#.......###...#........",
    "........#..#.......###.........",
    "..............#......#..#......",
    "#......#.....#....#.#..........",
    ".#......##.#.#.....#...#.#....#",
    ".##...........#..#.##.....#....",
    ".....#.....................#...",
    ".#..#...#...##.#...#...........",
    ".......#.......##..#.#..#......",
    ".......##.....#.....#..........",
    ".................#.............",
    "#........#..#.......##.........",
    "#...#..###.#..#....#.#.###.....",
    "..#.......#.......#.......#....",
    "..............#............##..",
    ".#...#..#...##.........#....#..",
    "#...........#...#..............",
    ".......#.....#......#..#.....#.",
    "..........#......#.............",
    "##.........###..##.#....#..#.#.",
    "..............###..............",
    "#..##.............##.....#.....",
    "....##...................#..#..",
    "....#.....#..............#..#.#",
    "........#........##...#.....##.",
    "#...........#.##..........##...",
    "#......##.....#...............#",
    "..##..#....#.................#.",
    "#.......##.....................",
    "...............#.##..##......#.",
    "..#.##..#.#....#.......##......",
    "......##....#............##....",
    ".#..#..##.....#.##....#........",
    "#.........#..........#...#....#",
    "...#.......#.............#.#.#.",
    "..##............#...##........#",
    ".......#.#.#........#..........",
    ".....#.............#.....#.....",
    ".........#.........#.........#.",
    "#.....#....#.......#...........",
    ".........#....#.............#.#",
    ".##..#.......#...#......#......",
    "....#....#....#........#....#..",
    "............#.......#..#......#",
    ".#............#.##........##...",
    "..#...##...#....#...#.#...#..#.",
    "#...#..........#..##.........#.",
    "..#.........................#.#",
    "...........#.........#..#.##...",
    ".#..................#..#.......",
    "......#......#...........#..#..",
    "...##.....#.....#..#.......#...",
    ".........#.#.......#......#....",
    "...........#................#..",
    ".....#...#..#............##....",
    ".#.......#..#....#..........#..",
    "#.....#..#.....#..##.......##..",
    "...#.......#...#....#...#.#..##",
    "...#...##......#....#....#.....",
    ".......###.#..#.......#......#.",
    "........#.#...#..#..#...#....#.",
    "....#.........##.#.....#.......",
    "....#.........#..##........#...",
    "..#...........#......#....#.##.",
    ".....................#.........",
    "...................##......#..#",
    "......#.#.....##..##..........#",
    "..#.##........#.#.#..........#.",
    ".#.......#...##.#....#....#....",
    "#.#......#..#..#.......#.......",
    ".............#........#.......#",
    "....#...#.....#........#...#...",
    "..#..............##..#.........",
    "..#.................#..#...##..",
    "....#..#...#...................",
    "......#.........##.#..#..#...##",
    "........#..#....#.......#.#.##.",
    ".#...#...........#..........#..",
    "##.....#...#............##...#.",
    ".##.....#...#..................",
    ".#.......####.#..##.##.#......#",
    ".............#...#..#..#.......",
    "...#.##.........#.#....#.......",
    "...........##...##....#....##..",
    "........#......#...#...........",
    "...........#..#...#....#.##....",
    "..##....#..........#....#...#..",
    "#....#.#.#.......#.#...........",
    "......#............##..........",
    "#.#.###..#....#.......#...#....",
    ".#......##..#..#.#.........#..#",
    "..#.........#........#....#....",
    "......##.#.......##....#..#..##",
    ".............#...#............#",
    "......#......#...#.#.#.##.#....",
    "#.#...#.##.....#..............#",
    "..........#.............##.##..",
    "#......#....#...#.#.#.#..#....#",
    "........#........#...#.#......#",
    ".....#...........#.............",
    "...........#....#..........#...",
    "....####...#..##....#.#........",
    ".#......#...#..#...........#...",
    "#......###..#.##.###...........",
    "..#...........#.........#....#.",
    "................#.#....#..#.##.",
    "...................#......#....",
    "....#.#.....#.......#...###.##.",
    ".#........#.#....#...#..#...#..",
    "....#..###.................#..#",
    ".....#.#..#........#......#..#.",
    "....#.....#...............#...#",
    "............##.#.........#..#..",
    ".......#..#..##.#.#...##.......",
    "..#..........##..#..#........#.",
    "..............#..#...#.........",
    "......#.#....#........##.......",
    ".#.....##....#..#...#.......##.",
    "..............#.##.............",
    "#..#..#...##....##.#.....##.#..",
    "..#...###..#.........##........",
    "........##......#.....#..###...",
    ".....#......##.###.............",
    "....#.....#.#..#.#..#..........",
    "....#..#.......#...........#...",
    ".#.............#..#......##....",
    "..#.#......#.#.................",
    ".......#.#.#............#..#...",
    "......###....##............#..#",
    ".........#....#......#.........",
    "..........#...............#..#.",
)

/**
 * Returns Char in String as if String repeats itself indefinitely
 */
fun String.position(position: Int): Char {
    val fixedPosition = position % (length)
    println("$position $fixedPosition")
    return this[fixedPosition]
}

val input = puzzleInput
val encountersR1D1 = calculateEncountersR1D1(input)
val encountersR3D1 = calculateEncountersR3D1(input)
val encountersR5D1 = calculateEncountersR5D1(input)
val encountersR7D1 = calculateEncountersR7D1(input)
val encountersR1D2 = calculateEncountersR1D2(input)

val multiplied = listOf(
    encountersR1D1,
    encountersR3D1,
    encountersR5D1,
    encountersR7D1,
    encountersR1D2
).reduce { acc, i -> acc * i }

println(multiplied)


// --------- Functions

fun calculateEncountersR1D1(input: Array<String>): Int {
    var encounters = 0
    var position = 0
    input.forEach {
        val charAtPosition = it.position(position)
        val encounteredTree = charAtPosition == '#'
        println(charAtPosition)
        if (encounteredTree) encounters++
        position += 1
    }
    return encounters
}

fun calculateEncountersR3D1(input: Array<String>): Int {
    var encounters = 0
    var position = 0
    input.forEach {
        val charAtPosition = it.position(position)
        val encounteredTree = charAtPosition == '#'
        println(charAtPosition)
        if (encounteredTree) encounters++
        position += 3
    }
    return encounters
}

fun calculateEncountersR5D1(input: Array<String>): Int {
    var encounters = 0
    var position = 0
    input.forEach {
        val charAtPosition = it.position(position)
        val encounteredTree = charAtPosition == '#'
        println(charAtPosition)
        if (encounteredTree) encounters++
        position += 5
    }
    return encounters
}

fun calculateEncountersR7D1(input: Array<String>): Int {
    var encounters = 0
    var position = 0
    input.forEach {
        val charAtPosition = it.position(position)
        val encounteredTree = charAtPosition == '#'
        println(charAtPosition)
        if (encounteredTree) encounters++
        position += 7
    }
    return encounters
}

fun calculateEncountersR1D2(input: Array<String>): Int {
    var encounters = 0
    var position = 0
    input.forEachIndexed { index, s ->
        if (index % 2 == 0) {
            val charAtPosition = s.position(position)
            val encounteredTree = charAtPosition == '#'
            println(charAtPosition)
            if (encounteredTree) encounters++
            position += 1
        }
    }
    return encounters
}
